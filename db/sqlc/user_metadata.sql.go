// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: user_metadata.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const createUserMetadata = `-- name: CreateUserMetadata :exec
INSERT INTO user_metadata (
  user_id,
  metadata
) VALUES (
  $1,$2
)
`

type CreateUserMetadataParams struct {
	UserID   uuid.UUID `json:"user_id"`
	Metadata []byte    `json:"metadata"`
}

func (q *Queries) CreateUserMetadata(ctx context.Context, arg CreateUserMetadataParams) error {
	_, err := q.db.Exec(ctx, createUserMetadata, arg.UserID, arg.Metadata)
	return err
}

const getUserMetadata = `-- name: GetUserMetadata :one
SELECT user_id, metadata, created_at FROM user_metadata WHERE user_id = $1
`

func (q *Queries) GetUserMetadata(ctx context.Context, userID uuid.UUID) (UserMetadatum, error) {
	row := q.db.QueryRow(ctx, getUserMetadata, userID)
	var i UserMetadatum
	err := row.Scan(&i.UserID, &i.Metadata, &i.CreatedAt)
	return i, err
}
